name: CI / CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  docker_build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push the Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: jaoox/weather-app-tp2:latest
          context: ./TP2  
          file: ./TP2/Dockerfile

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

  docker_run:
    needs: docker_build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run Docker Image
        run: |
          docker pull jaoox/weather-app-tp2:latest
          docker run -d -p 5000:5000 jaoox/weather-app-tp2:latest
          sleep 10

      - name: Check if API is up
        run: |
          curl --fail http://localhost:5000/gettingWeather?lat=40.712776&lon=-74.005974&API_KEY=048a8f361dd3ae83d166d41cd7767b74 || exit 1
          
  testing_api-response:
    needs: [docker_build_and_push, docker_run]

    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Dependencies
        run: |
          cd TP2
          pip install -r requirements.txt


      - name: Run Tests
        run: |
          python -m unittest TP2.tests.test_app.TestWeatherApp

    
